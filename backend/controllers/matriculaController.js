// backend/controllers/matriculaController.js
const { Matricula, Aluno, Turma } = require('../models');

// Criar matr√≠cula
const criarMatricula = async (req, res) => {
  try {
    const { alunoId, turmaId } = req.body;

    const matricula = await Matricula.create({
      alunoId,
      turmaId,
      dataMatricula: new Date(),
      ativo: true
    });

    res.status(201).json({ message: 'Matr√≠cula criada com sucesso!', matricula });
  } catch (error) {
    res.status(500).json({ error: 'Erro ao criar matr√≠cula', details: error.message });
  }
};

// Listar todas as matr√≠culas
const listarMatriculas = async (req, res) => {
  try {
    const matriculas = await Matricula.findAll({
      include: [
        { model: Aluno, as: 'aluno' },
        { model: Turma, as: 'turma' }
      ]
    });

    res.json(matriculas);
  } catch (error) {
    res.status(500).json({ error: 'Erro ao listar matr√≠culas', details: error.message });
  }
};

// Obter matr√≠cula por ID
const obterMatricula = async (req, res) => {
  try {
    const matricula = await Matricula.findByPk(req.params.id, {
      include: [
        { model: Aluno, as: 'aluno' },
        { model: Turma, as: 'turma' }
      ]
    });

    if (!matricula) {
      return res.status(404).json({ error: 'Matr√≠cula n√£o encontrada' });
    }

    res.json(matricula);
  } catch (error) {
    res.status(500).json({ error: 'Erro ao buscar matr√≠cula', details: error.message });
  }
};

// Atualizar matr√≠cula
const atualizarMatricula = async (req, res) => {
  try {
    const matricula = await Matricula.findByPk(req.params.id);

    if (!matricula) return res.status(404).json({ error: 'Matr√≠cula n√£o encontrada' });

    await matricula.update(req.body);

    res.json({ message: 'Matr√≠cula atualizada com sucesso!', matricula });
  } catch (error) {
    res.status(500).json({ error: 'Erro ao atualizar matr√≠cula', details: error.message });
  }
};

// Deletar matr√≠cula
const deletarMatricula = async (req, res) => {
  try {
    const matricula = await Matricula.findByPk(req.params.id);

    if (!matricula) return res.status(404).json({ error: 'Matr√≠cula n√£o encontrada' });

    await matricula.destroy();

    res.json({ message: 'Matr√≠cula deletada com sucesso!' });
  } catch (error) {
    res.status(500).json({ error: 'Erro ao deletar matr√≠cula', details: error.message });
  }
};

// üîë Exporta todas as fun√ß√µes corretamente
module.exports = {
  criarMatricula,
  listarMatriculas,
  obterMatricula,
  atualizarMatricula,
  deletarMatricula
};
